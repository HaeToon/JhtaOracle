--join tabel 연결해서 쓰기.
SELECT * FROM EMP;
SELECT * FROM DEPT;

SELECT * FROM EMP,DEPT ; --14*4의 56개 데이터 출력됨

--TABEL 의 ALIAS(별칭) 은 한칸띄우먄됨
SELECT * FROM EMP E,DEPT D WHERE E.DEPTNO = D.DEPTNO; -- 중복된 DEPTNO를 이용해 조건을 맞춤

--중복되는 DEPTNO 는 반드시 어디의 COLUMN 인지 적어야함.
SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,D.DEPTNO,DNAME,LOC FROM EMP E,DEPT D WHERE E.DEPTNO = D.DEPTNO ;

SELECT E.*,DNAME,LOC FROM EMP E , DEPT D WHERE E.DEPTNO =D.DEPTNO;

SELECT E.*,D.DNAME,D.LOC FROM EMP E , DEPT D WHERE E.DEPTNO =D.DEPTNO ORDER BY EMPNO;

-- INNER JOIN 등가 조인  같은 값을 찾아서  JOIN 하기  JOIN 을 쓰지않으면 보통 INNER JOIN 

-- 비등가 조인  
SELECT * FROM EMP;

SELECT * FROM SALGRADE;
-- 같다가 아닌 값이 사이에 있는경우
SELECT * FROM EMP E , SALGRADE S WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL;
SELECT * FROM EMP E , SALGRADE S WHERE E.SAL >= S.LOSAL AND E.SAL <= S.HISAL;

-- 등가조인 이면서 SELF 조인  (+)가 안붙은곳이  기준임
SELECT E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO AS MGR_NO ,E2.ENAME AS MGR_NAME  FROM EMP E1 , EMP E2 WHERE E1.MGR=E2.EMPNO(+);
SELECT E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO AS MGR_NO ,E2.ENAME AS MGR_NAME  FROM EMP E1 , EMP E2 WHERE E1.MGR(+)=E2.EMPNO;

-- ANSI 조인 / 표준조인 

--공통인 DEPTNO 는 TABEL 명을 비워둠
-- 메인테이블 연결하는테이블  
SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,DEPTNO,D.DNAME,D.LOC FROM EMP E NATURAL JOIN DEPT D ORDER BY DEPTNO,E.EMPNO;

SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,DEPTNO,D.DNAME,D.LOC FROM EMP E JOIN DEPT D USING(DEPTNO) ORDER BY DEPTNO,E.EMPNO;
--JOIN 만 쓸경우 INNER JOIN  ON () 괄호생략가능
SELECT E.EMPNO,E.ENAME,E.JOB,E.MGR,E.HIREDATE,E.SAL,E.COMM,E.DEPTNO,D.DNAME,D.LOC FROM EMP E JOIN DEPT D ON(E.DEPTNO=D.DEPTNO) WHERE E.JOB ='MANAGER' ORDER BY DEPTNO,E.EMPNO;

SELECT E.ENAME,E.DEPTNO,D.DNAME,D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.JOB = 'MANAGER'; --ORACLE에서의 조인


--OUTER JOIN 
SELECT E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO AS MGR_NO , E2.ENAME AS MGR_NAME 
FROM EMP E1 LEFT OUTER JOIN EMP E2 ON E1.MGR = E2.EMPNO ORDER BY E1.EMPNO;

SELECT E1.EMPNO,E1.ENAME,E1.MGR,E2.EMPNO AS MGR_NO , E2.ENAME AS MGR_NAME 
FROM EMP E1 RIGHT OUTER JOIN EMP E2 ON E1.MGR = E2.EMPNO ORDER BY E1.EMPNO;

SELECT E1.EMPNO,E1.ENAME,D1.DEPTNO,D1.DNAME 
FROM EMP E1 CROSS JOIN DEPT D1 ORDER BY E1.EMPNO;
--FULL OUTER JOIN 다해주는것 
SELECT E1.EMPNO,E1.ENAME,D1.DEPTNO,D1.DNAME 
FROM EMP E1 FULL OUTER JOIN DEPT D1 ON E1.DEPTNO = D1.DEPTNO ORDER BY E1.EMPNO;


SELECT * FROM DEPT;
--1-1
SELECT E.DEPTNO,ENAME,DNAME,SAL FROM EMP E , DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.SAL>2000;
--1-2
SELECT E.DEPTNO,ENAME,DNAME,SAL FROM EMP E JOIN DEPT D ON(E.DEPTNO = D.DEPTNO) WHERE E.SAL>2000; 
--2-1
SELECT E.DEPTNO,D.DNAME,TRUNC(AVG(SAL)),MAX(SAL),MIN(SAL),COUNT(*) FROM EMP E , DEPT D WHERE E.DEPTNO = D.DEPTNO GROUP BY E.DEPTNO,D.DNAME ;
--2-2
SELECT E.DEPTNO , DNAME,TRUNC(AVG(SAL)),MAX(SAL),MIN(SAL),COUNT(*) FROM EMP E JOIN DEPT D ON(E.DEPTNO = D.DEPTNO) GROUP BY E.DEPTNO,D.DNAME; 
--3
SELECT D.DEPTNO,DNAME,EMPNO,MGR,ENAME,JOB,SAL,LOC,COMM FROM EMP E FULL OUTER JOIN DEPT D ON E.DEPTNO =D.DEPTNO ORDER BY DEPTNO;









