--다중행 / 복수행 함수
SELECT * FROM EMP;
SELECT SUM(SAL) FROM EMP; --
-- 다중행 함수는 다중행끼리만 사용가능, 단일행 함수랑 같이 사용못함.
SELECT ENAME,SUM(SAL) FROM EMP; --SUM ,COUNT 의 NULL 값은 0으로 처리한다
SELECT COUNT(COMM) AS COMM_COUNT ,SUM(SAL) AS SUM_SAL FROM EMP;
--갯수세기 
SELECT COUNT(*) FROM EMP WHERE ENAME = 'KING';
--평균구하기
SELECT TRUNC(AVG(SAL)) FROM EMP;  
SELECT TRUNC(SUM(SAL)/COUNT(SAL)) FROM EMP;
--DISTINCT 중복제거후 합치기 같은 값이 있으면 한번만 연산.
SELECT SUM(DISTINCT SAL) AS DISTINCT_SAL,SUM(ALL SAL)AS ALL_SAL, SUM(SAL) AS SAL  FROM EMP; 
--최대 최소
SELECT MAX(SAL) AS MAX_SAL , MIN(SAL) AS MIN_SAL FROM EMP;
SELECT MAX(HIREDATE) AS MAX_HIRE , MIN(HIREDATE) AS MIN_HIRE FROM EMP;
SELECT MAX(HIREDATE) AS MAX_HIRE , MIN(HIREDATE) AS MIN_HIRE FROM EMP WHERE DEPTNO = 30;

--다중행 함수는 GROUP BY 
--10,20,30
SELECT TRUNC(AVG(SAL)) FROM EMP WHERE DEPTNO = 10
UNION ALL
SELECT TRUNC(AVG(SAL)) FROM EMP WHERE DEPTNO = 20
UNION ALL
SELECT TRUNC(AVG(SAL)) FROM EMP WHERE DEPTNO = 30;

SELECT TRUNC(AVG(SAL)) FROM EMP GROUP BY DEPTNO; -- GROUP BY 시 COLUMN명을 일치하게 써야함.
--ORDER BY 는 무조건 제일 마지막에 쓴다. 예전에는 SORT 되어서 결과반환
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP GROUP BY DEPTNO,JOB  ORDER BY DEPTNO,JOB ;

--FROM 다음 쓸수있는것들 순서
--1. WHERE 2. GROUP BY 3. HAVING 4. ORDER BY

--GRUOP BY 에 조건달기 HAVING  조건문  WHERE 절에 GROUP 함수의 조건을 쓸수없다.
--SELECT DEPTNO, JOB, AVG(SAL) FROM EMP WHERE AVG(SAL) GROUP BY DEPTNO,JOB ORDER BY DEPTNO,JOB ;
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP GROUP BY DEPTNO,JOB HAVING AVG(SAL) >= 2000  ORDER BY DEPTNO,JOB ;
--WHERE 조건에서 행을 먼저 거른후  그룹핑한다.
SELECT DEPTNO, JOB, AVG(SAL) FROM EMP WHERE SAL <= 3000 GROUP BY DEPTNO,JOB HAVING AVG(SAL) >= 2000  ORDER BY DEPTNO,JOB ;

--부서별 직책의 평균급여가 500이상인 사람들의 부서번호 직책  부서별 직책의 평균급여 출력
SELECT * FROM EMP;
SELECT DEPTNO,JOB,AVG(SAL) FROM EMP GROUP BY DEPTNO,JOB HAVING AVG(SAL)>=500;--?
SELECT DEPTNO , JOB , AVG(SAL) FROM EMP GROUP BY DEPTNO , JOB HAVING AVG(SAL)>=500 ORDER BY DEPTNO,JOB;

--직책별 전체급여 , 몇명있는지 , 평균급여
SELECT JOB , COUNT(*)AS 인원수,TRUNC(AVG(SAL)) AS 평균급여 
FROM EMP GROUP BY JOB;

--전체급여가 5000 이상이고 평균급여가 2000 이상인 것만 출력
SELECT JOB , COUNT(*)AS 인원수,TRUNC(AVG(SAL)) AS 평균급여 
FROM EMP GROUP BY JOB HAVING SUM(SAL)>=5000 AND AVG(SAL)>=2000;
--표준편차 
SELECT * FROM EMP;
SELECT DEPTNO , TRUNC(STDDEV(SAL)) AS 표준편차 FROM EMP GROUP BY DEPTNO;

--소계구하기 ROLLUP() 
SELECT DEPTNO AS 부서,COUNT(*) AS 수,JOB AS 직책, SUM(SAL) AS 총급여 
FROM EMP GROUP BY ROLLUP (DEPTNO,JOB)ORDER BY DEPTNO,JOB;
--GROUP BY 절에 ROLLUP 을 사용하면 각각의 소계를 구해준다. 그리고 마지막에 전체 값을 다시한번 출력한다.

--CUBE GROUP BY 절에 씀.
SELECT DEPTNO AS 부서,COUNT(*) AS 수,JOB AS 직책, SUM(SAL) AS 총급여 
FROM EMP GROUP BY CUBE (DEPTNO,JOB)ORDER BY DEPTNO,JOB;

SELECT DEPTNO AS 부서,COUNT(*) AS 수,JOB AS 직책, SUM(SAL) AS 총급여 ,
GROUPING(DEPTNO), --0이 나오면 GROUPING 되었다 아니면 1나옴
GROUPING(JOB) 		
FROM EMP 
GROUP BY CUBE (DEPTNO,JOB)
ORDER BY DEPTNO,JOB;

SELECT DECODE(GROUPING(DEPTNO),1,'ALL_DEPT_NO',DEPTNO)  AS DEPTNO , DECODE(GROUPING(JOB),1,'ALL_JOB',JOB )AS JOB , COUNT(*) AS COUNT ,MAX(SAL) AS MAX ,TRUNC(AVG(SAL)) AS AVG
FROM EMP GROUP BY CUBE(DEPTNO,JOB) ORDER BY DEPTNO,JOB;

--1.EMP 테이블에서 부서번호,평균급여,최고급여,최저급여,사원수를 출력해라. 평균급여에서는 소수점을제외해라.
SELECT DEPTNO,TRUNC(AVG(SAL)) AS 평균급여 ,MAX(SAL) AS 최고급여 ,MIN(SAL)AS 최저급여,COUNT(*) AS 사원수 FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO , TRUNC(AVG(SAL)) AS AVG , MAX(SAL) AS 최고급여 ,MIN(SAL) AS 최저급여 , COUNT(*) AS 사원수 FROM EMP GROUP BY DEPTNO;
SELECT DEPTNO , ROUND(AVG(SAL)) AS AVG , MAX(SAL) AS 최고급여 ,MIN(SAL) AS 최저급여 , COUNT(*) AS 사원수 FROM EMP GROUP BY DEPTNO;
--2같은 직책에 종사하는 사원이 3명 이상인 직책과 인원수를 출력하시오.
SELECT JOB,COUNT(ENAME) AS 인원수 FROM EMP GROUP BY JOB HAVING COUNT(ENAME)>=3;
SELECT JOB , COUNT(ENAME) AS 인원수 FROM EMP GROUP BY JOB HAVING COUNT(ENAME)>=3 ORDER BY 2,1;

--3 입사연도를 기준으로 년도별 입사인원을 출력하세요
SELECT SUBSTR(HIREDATE,1,2) AS 입사년도 ,COUNT(*) FROM EMP GROUP BY SUBSTR(HIREDATE,1,2) ;
SELECT TO_CHAR(HIREDATE,'YYYY') AS YEAR , DEPTNO , COUNT(*) AS COUNT FROM EMP GROUP BY ROLLUP(TO_CHAR(HIREDATE ,'YYYY' ),DEPTNO) ORDER BY YEAR; 

--4 추가수당을 받는 사원수와 그렇지않은 사원수를 출력하세요 YES몇명 NO 몇명
SELECT ENAME,DECODE(COMM,NULL,'NO','YES') AS "CHECK", COUNT(COMM) AS BONUS FROM EMP GROUP BY ENAME,COMM ORDER BY COMM;
SELECT NVL2(COMM,'YES','NO') AS COMM, COUNT(*) AS COUNT FROM EMP GROUP BY NVL2(COMM, 'YES','NO');

--5 각 부서의 입사연도별 사원수 최고급여 ,총급여 ,평균급여를 부서별 소계와 총계를 출력하세요
SELECT DEPTNO ,SUBSTR(HIREDATE,1,2) AS 입사년도 ,MAX(SAL) AS 최고급여,SUM(SAL) AS 총급여,TRUNC(AVG(SAL)) AS 평균급여,COUNT(*) AS 입사사원수 FROM EMP GROUP BY ROLLUP(SUBSTR(HIREDATE,1,2),DEPTNO);
SELECT DEPTNO TO_char(HIREDATE , 'YYYY') AS YEAR , COUNT(*) AS COUNT, MAX(SAL),SUM(SAL),TRUNC(AVG(SAL1) AS AVG FROM EMP 
GROUP BU ROLLUP(DEPTNO,TO_CHAR,YYYY) ORDERbY1.2;

-- LIST_AGG (AGGREGATE)
SELECT ENAME FROM EMP;

SELECT DEPTNO , ENAME FROM EMP GROUP BY DEPTNO;
--옆으로 나열하고싶을떄
SELECT DEPTNO , LISTAGG(ENAME,',') WITHIN GROUP(ORDER BY SAL DESC) AS ENAME FROM EMP GROUP BY DEPTNO;


--PIVOT SUBQUERY QUERY 안에 QUERY 쓰는것 
